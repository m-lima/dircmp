name: Build

on:
  push:
    branches:
      - qml

env:
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare env
        env:
          BLOINK: blokiner
        run: |
          echo 'QT_DIR_PATH="${{ runner.temp }}/qt"' >> "${{ github.env }}"
          echo 'QMAKE="${QT_DIR_PATH}/bin/qmake"' >> "${{ github.env }}"
          echo 'QT_INCLUDE_PATH="${QT_DIR_PATH}/include"' >> "${{ github.env }}"
          echo 'QT_LIBRARY_PATH="${QT_DIR_PATH}/lib"' >> "${{ github.env }}"
          echo 'QT_QPA_PLATFORM_PLUGIN_PATH="${QT_DIR_PATH}/share/qt/plugins/platforms"' >> "${{ github.env }}"
          echo 'QML2_IMPORT_PATH="${QT_DIR_PATH}/share/qt/qml"' >> "${{ github.env }}"

      - name: Prepare Cargo
        id: prepare-cargo
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Cache QT
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: ${{ env.QT_DIR_PATH }}
          key: qt-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('./.github/workflows/build_qt.sh') }}

      - name: Compile QT
        if: ${{ steps.cache-qt.outputs.cache-hit != 'true' }}
        env:
          QT_SRC_PATH: ${{ runner.temp }}/qt_src
        run: ${{ github.workspace }}/.github/workflows/build_qt.sh

      - name: Format
        run: cargo fmt --all -- --check

      - name: Build
        run: cargo check --verbose

      - name: Lint
        run: cargo clippy --verbose -- -W clippy::pedantic

      - name: Test
        run: cargo test --verbose --no-fail-fast
