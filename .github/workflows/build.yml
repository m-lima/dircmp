name: Build

on:
  push:
    branches:
      - qml

env:
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      QT_SRC_PATH: ${{ runner.temp }}/qt_src
      QT_DIR_PATH: ${{ runner.temp }}/qt
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare temp dir
        run: |
          mkdir ${{ env.TEMP_DIR }}

      - name: Prepare Cargo
        id: prepare-cargo
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Cache QT
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: ${{ env.QT_DIR_PATH }}
          key: qt-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('./.github/workflows/build_qt.sh') }}

      - name: Compile QT
        if: ${{ steps.cache-qt.outputs.cache-hit != 'true' }}
        run: |
          ./.github/workflows/build_qt.sh

      - name: Format
        run: cargo fmt --all -- --check

      - name: Build
        env:
          QMAKE: ${{ env.QT_DIR_PATH }}/bin/qmake
          QT_INCLUDE_PATH: ${{ env.QT_DIR_PATH }}/include
          QT_LIBRARY_PATH: ${{ env.QT_DIR_PATH }}/lib
          QT_QPA_PLATFORM_PLUGIN_PATH: ${{ env.QT_DIR_PATH }}/share/qt/plugins/platforms
          QML2_IMPORT_PATH: ${{ env.QT_DIR_PATH }}/share/qt/qml
        run: cargo check --verbose

      - name: Lint
        run: cargo clippy --verbose -- -W clippy::pedantic

      - name: Test
        env:
          QMAKE: ${{ env.QT_DIR_PATH }}/bin/qmake
          QT_INCLUDE_PATH: ${{ env.QT_DIR_PATH }}/include
          QT_LIBRARY_PATH: ${{ env.QT_DIR_PATH }}/lib
          QT_QPA_PLATFORM_PLUGIN_PATH: ${{ env.QT_DIR_PATH }}/share/qt/plugins/platforms
          QML2_IMPORT_PATH: ${{ env.QT_DIR_PATH }}/share/qt/qml
        run: cargo test --verbose --no-fail-fast
