import {
  Button as StdButton,
  LineEdit as StdLineEdit,
  VerticalBox as StdVerticalBox
} from "std-widgets.slint";

// component MyButton {
//   in property<brush> background;
//   in property<length> radius: 0;
//   in property<string> text;
//   in property<length> text-size: 16px;
//   in property<bool> indent: false;
//
//   private property<brush> effective-color: touch.has-hover ? background.brighter(0.2) : background;
//
//   Rectangle {
//     background: @linear-gradient(
//       // TODO: On pressed, reverse this angle
//       0deg,
//       root.effective-color.darker(0.2) 0%,
//       root.effective-color.brighter(0.2) 100%
//     );
//     border-radius: root.radius;
//     min-height: text-size * 2;
//   }
//
//   touch := TouchArea {
//     mouse-cursor: pointer;
//   }
//
//   if (indent) : Text {
//     x: text.x - 1px;
//     y: text.y - 1px;
//     text: root.text;
//     font-size: root.text-size;
//
//     color: #000000;
//
//     horizontal-alignment: center;
//     vertical-alignment: center;
//     font-weight: 600;
//   }
//
//   if (indent) : Text {
//     x: text.x + 1px;
//     y: text.y + 1px;
//     text: root.text;
//     font-size: root.text-size;
//
//     color: #888888;
//
//     horizontal-alignment: center;
//     vertical-alignment: center;
//     font-weight: 600;
//   }
//
//   text := Text {
//     text: root.text;
//     font-size: root.text-size;
//
//     color: #444444;
//
//     horizontal-alignment: center;
//     vertical-alignment: center;
//     font-weight: 600;
//   }
// }

export component MainWindow inherits Window {
  title: "DirCmp";
  width: 800px;
  height: 800px;
  icon: @image-url("res/icon.png");
  background: #353535;
  forward-focus: lineEdit;

  callback result-path-changed <=> lineEdit.accepted;
  callback load <=> button.clicked;

  out property <string> result-path <=> lineEdit.text;


  StdVerticalBox {
    alignment: start;

    HorizontalLayout {
      // height: lineEdit.height;

      lineEdit := StdLineEdit {
        placeholder-text: "Path to the first folder";
        text: "/Users/lima/code/rust/dircmp/bla";
        // accepted(text) => { root.result-path-changed(text); }
      }

      button := StdButton {
        // width: lineEdit.height;
        // height: lineEdit.height;
      }
    }
  }
}
